

abstract 

list of figures

list of tables

abstract

	la crescita in base al numero di dipendenti necessità di avere un tool complesso e sofisticato per gestione della parte di sviluppo sw
	non è il solito gestionale, ma sono tool specifici che considerano i trend a livello di sviluppo

	raccontare risultato ottenuto dello stage
		il lavoro di questa tesi è stato ... tool più conosciuto dal mercato ... installare / config ... 
		ottenere approvazione da management .. migrazione dei sistemi in uso nel nuovo gestionale

sommario (traduzione abstract)

chapter 1: introduction

	introduzione a significato di way of working (in SW)
		cercare articoli da blog per spiegare
		martin fowler		

	inserire la citazione che dice il team perfetto sfamato da 2 scatoloni di pizza (Two-Pizza Team Rule)

	fare tracking delle isssue / bug è diventato difficile / complesso
		molti tool open source che fanno anche documentazione e code review (altri aspetti)

	l'evoluzione negli ultimi anni nelle aziende IT
		necessità di organizzazione delle azienda e la necessità di avere una gerarchia (o simil gerarchia)

	ho sperimentato questo approccio in athonet, mostrata interessata all'utilizzo di un gestionale sw di tipo agile per la gestione dei processi di sviluppo sw interni

	- premise
		introduzione al documento
		che cos'è quello che si sta leggendo
		che cosa contiene in generale

	- l'azienda
		breve paragrafo in cui descrivo l'azienda
			quando è stata fondata
			con che visione
			di cosa si occupa
			scrivere che ha vinto tot premi e per cosa (link ad articolo)
			dove sono adesso (in via di crescita e sviluppo)
			cosa pensano di fare di buono nel mondo e per il futuro

	- il progetto
		cosa mi ha portato a scegliere questo stage rispetto ad altri
		breve descrizione del progetto, da riprendere successivamente

	- organizzazione del testo
		com'è strutturato il testo in capitoli con una breve frase descrittiva per ciascuno

chapter 2: descrizione dello stage

	- i bisogni dell'azienda
		che cosa sta utilizzando athonet adesso per la gestione del lavoro e del tracking
		come issue tracking system, gestore di wiki interno, ecc --> tanti tool scorrelati tra loro
		perchè athonet ha la necessità di utilizzare tool differenti 
		(+ stabili, meglio documentati, miglior UI / UX etc.)

	- pianificazione
		in base a cosa ho pianificato
		come ho parlato con il tutor per fare capire i loro bisogni, lo scopo finale, e come arrivarci
		step da fare
		parlare poi di chi avrà bisogno del tool e con chi interagirò durante lo stage
		fase preliminare di pianificazione insieme ad altre figure (aree diverse, managemeng, product ownership...)

	- come ho approciato il problema

	- riassunto piano di lavoro con grafici
		preventivo ore + lavoro
		risultato del paragrafo precedente

chapter 3: processi e metodologie dell'agile 

	Possibile introduzione del tipo "Before getting into what I have concretely achieved / implemented, let's take a better look at what agile is and how it came to be" (overview)

	- breve storia dell'agile
		cosa c'era prima dell'agile
		quando dove e perchè c'era la necessità

	- il manifesto agile
		i 4 punti fondamentali del manifesto agile

	- i dialetti / cugini dell'agile
		kanban, etc.

	- applicazioni dell'agile 
		modello spotify (+ altre grandi aziende)
		e le piccole aziende come athonet come fanno? (misto)

	- utilità agile
		l'agile può andare a completamente sostituire il resto
		cosa ne pensano gli utenti

	- che tipo di agile viene utilizzato da athonet
		misto a causa dei pochi dipendenti che hanno ancora una responsabilità ampia all'interno dell'azienda ma pensano che si possa incorporare agile
		processi di business

chapter 4: Jira and Confluence

	- analisi dei tool
		a cosa serve ciascuno (grafici o tabelle con funzionalità)
		si possono installare plugin

	- come riescono a coprire i bisogni dell'azienda
		come mai sono stati scelti proprio questi tool
		descrivere cos'è la roadmap, perchè è così importante e perchè gli servono\
		cosa riescono a fare in più rispetto a quelli attuali

	- analisi dei casi d'uso
		riprendere necessità dell'azienda
		fare un paio di uml con le varie figure aziendali e con cosa si andranno ad interfacciare

	- che comunità c'è dietro?
		ho cercato informazioni su internet
		documentazione
		atlassian community

chapter 5: lo stage

	questo capitolo rappresenta il corpo di questo documento e contiene il lavoro svolto durante lo stage suddiviso in macro periodi

	implementazione (installazione e configurazione iniziale)

		- con cosa lavoro (hw e sw)
			installazione dei software (riferimento a capitolo precedente)
			ho lavorato su una vm centos con queste caratteristiche ...

		- cosa ho notato che serviva installare insieme
			database
			mi ha fatto ritardare rispetto al piano di lavoro? no, mi ero aspettato ci fossero software terzi da configurare / imparare

		- configurazione iniziale dei tool
			interconnessione tra i tool

		- prima variazione dei requisiti in corso d'opera
			non usare bitbucket ma gitlab
			visto il grosso ammontare di elementi customizzabili è stato necessario scremare le cose e capire cosa si poteva facilmente aggiungere e cosa lasciare per dopo
			abbellimento dell'environment

		- primo periodo di "gioco" / capire i prodotti "in action"
			creazione di progetti di mock
			interconnetterli
			capire il workflow delle issue
			utilizzare gitlab (con account personale su server aziendale e progettini di mock) per effettuare transizioni automatiche delle issue (spiegare correlazione tra progetti in gitlab e in jira)

		- personalizzazione interfaccia grafica
			a causa della poca disponibilità in questo primo periodo di marco e paolo che utilizzeranno questo tool in maniera intensiva rispetto al tutor, ho fatto un task secondario come quello della personalizzazione dell'interfaccia grafica

		- snapshot della macchina per salvare il lavoro svolto per ora
			parlare di milestone / baseline
			come le ho pensate nel piano di lavoro

	primi progetti di mock più veritieri e primi feedback

		- progetti di mock
			idee del tutor
			prime demo con lui per capire se questo tool effettivamente copre le necessità di base dell'azienda

		- integrazione effettiva con gitlab

			in questo periodo vista la scarista di opzioni di gitla nativo si è scelto di usare un plugin
			(decontestualizzare il tempo, a posteriori, ragionando per milestone)

			visto integrazione nativa
			scelta di utilizzare un plugin
			costa ma è migliore (descrivere da quale punto di vista)

		- prime riunioni "serie" e cosa ne è uscito
			primo feedback e discussioni di come può evolvere il progetto e come può essere applicato ai loro workflow
			riflessioni personali: a questo punto sto rispettando il piano di lavoro iniziale? sono in ritardo / anticipo?

		- nuovo cambio di requisiti

			giustificare --> dopo fase di studio / riscontro

			cosa può essere implementato subito, cosa no, come viene usato
			campi e workflow custom
			mapping tra processi jira e interni (sprint)

		- scrittura della bozza di documentazione e passaggio della documentazione in confluence

		- nuovo snapshot della macchina
			nuova baseline / milestone

	passaggio in produzione
		
		After the approval for using the tools by other departments (R&D) it's time to transition it / move it to production

		- migrazione da redmine
			tool automatico di migrazione
			collegamento con redmine, lo fa in maniera automatica
			e se va male? c'è sempre lo snapshot

		- primi progetti non di mock (con importanza effettiva [anche se minima] ed in corso)
			
		- fine tuning del progetto / prodotto finale
			interazione con le persone
			in base alle necessità degli utenti e di come lo usano faccio minime modifiche in produzione
			miglioramento della documentazione

		- come viene utilizzato questo tool
			è veramente agile? 
			è un dialetto?
			è un misto?
			perchè athonet lo sta usando in questo modo?

	feedback finale e cosa vorrebbero che venga implementato in futuro

		- feedback finale 
			feedback da parte del tutor

			feedback da responsabile strategia aziendale (gl)
			feedback da responsabile del prodotto (aka product ownner / hesham)
			feedback da responsabile sviluppo + testing
			
			feedback da parte di tutti gli utenti

		- quali piani ha athonet in futuro per questo tool
			arrivare ad utilizzare agile in maniera rigida?
			continuare a fare misto?

capitolo 6: conclusioni

	- diagramma di gantt finale
		come si discosta da quello iniziale
		cosa ha causato questo discostamento
		ho pianificato male

	- cosa ho imparato
		principalmente il way of working aziendale
		come funzionano questi tool
		il loro scopo di "ordinare" un'azienda

	- considerazioni personali sul progetto
		in un'azienda in crescita è molto utile darsi dei paletti
		in athonet funzionerà una cosa del genere?  software monolitico / complesso (service oriented architecture)
		sta funzionando questo tool adesso per il breve tempo che l'ho visto io in produzione?


appendice a: glossario

	parola + breve descrizione + relativo riferimento a dove trovarla nel testo

appendice b: bibliografia
 